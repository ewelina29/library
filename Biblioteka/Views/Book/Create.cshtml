@model Biblioteka.Models.Book

@{
    ViewBag.Title = "Create";
}


<link href="~/Content/Site.css" rel="stylesheet" />
@using (Html.BeginForm("Create", "Book", FormMethod.Post, new { enctype = "multipart/form-data" }))
{


    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add new book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-md-2">  Author </label>
            <div class="col-md-6 form-inline">
                @Html.DropDownList("AuthorType", null, new { @class = "form-control" })
                @Html.ActionLink("Add new", "Create", "Author", null, new { @class = "btn btn-default" })
            
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">  Category </label>
            <div class="col-md-6  form-inline">
                @Html.DropDownList("CategoryType", null, new { @class = "form-control" })
                @Html.ActionLink("Add new", "Create", "Category", null, new { @class = "btn btn-default" })

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Tags </label>
            <div class="col-md-6 form-inline">
                @Html.ListBox("Tags", ViewBag.Tagslist as MultiSelectList, new { @class = "form-control", @multiple = "true" })
                @Html.ActionLink("Add new", "Create", "Tag", null, new { @class = "btn btn-default" })


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TableOfContents, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="file" accept="application/pdf"  />
                @Html.ValidationMessageFor(model => model.TableOfContents, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create new book" class="btn default-button" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "redirect-button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
